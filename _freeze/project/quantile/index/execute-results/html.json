{
  "hash": "760768243c0e13944a460a7c2f590c41",
  "result": {
    "markdown": "---\ntitle: \"A Gentle Recovery?\"\ndate: \"2023-02-20\"\ncategories: [R, web scraping, quantile regression, linear regression, rolling join, special effects]\ndescription: \"Quantile regression and a gentle recovery in SW10 property transactions?\"\nbibliography: references.bib\ndraft: true\n---\n\n\n![](feature.jpg){fig-alt=\"A painted map of part of central London including the border of SW10 sited next to Chelsea FC\"}\n\nSeveral \"little projects\" have looked at residential properties in the SW10 area of London from varying perspectives:\n\n-   [House Sales](project/sw10/) reviewed the impact of historical events on house sales in London SW10.\n\n-   [Digging Deep](/project/planning) considers the correlation between house sales and planning applications.\n\n-   [Bootstraps & Bandings](/project/bands) uses a sample of recent house sales to infer whether property bands are as representative of property values today as they were three decades ago.\n\nHere I want to focus on modelled house sales volumes using quantile, as well as linear, regression.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(conflicted)\nlibrary(tidyverse)\nconflict_prefer_all(\"dplyr\", quiet = TRUE)\nlibrary(scales)\nlibrary(glue)\nlibrary(SPARQL)\nlibrary(clock)\nlibrary(lubridate)\nconflict_prefer(\"as_date\", \"lubridate\")\nlibrary(wesanderson)\nlibrary(vctrs)\nlibrary(tsibble)\nlibrary(rvest)\nlibrary(Quandl)\nlibrary(corrr)\nlibrary(quantreg)\nlibrary(Qtools)\nlibrary(ggfx)\nlibrary(usedthese)\n\nconflict_scout()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n\n(cols <- wes_palette(name = \"Royal1\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/theme-1.png){width=100%}\n:::\n:::\n\n\nHouse transaction data are provided by [HM Land Registry Open Data](http://landregistry.data.gov.uk/app/qonsole#).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nendpoint <- \"https://landregistry.data.gov.uk/landregistry/query\"\n\nquery <- 'PREFIX  text: <http://jena.apache.org/text#>\nPREFIX  ppd:  <http://landregistry.data.gov.uk/def/ppi/>\nPREFIX  lrcommon: <http://landregistry.data.gov.uk/def/common/>\n  \nSELECT  ?item ?ppd_propertyAddress ?ppd_hasTransaction ?ppd_pricePaid ?ppd_transactionCategory ?ppd_transactionDate ?ppd_transactionId ?ppd_estateType ?ppd_newBuild ?ppd_propertyAddressCounty ?ppd_propertyAddressDistrict ?ppd_propertyAddressLocality ?ppd_propertyAddressPaon ?ppd_propertyAddressPostcode ?ppd_propertyAddressSaon ?ppd_propertyAddressStreet ?ppd_propertyAddressTown ?ppd_propertyType ?ppd_recordStatus\n\nWHERE\n{ ?ppd_propertyAddress text:query _:b0 .\n  _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> lrcommon:postcode .\n  _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> _:b1 .\n  _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> \"( SW10 )\" .\n  _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> _:b2 .\n  _:b2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> 3000000 .\n  _:b2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil> .\n  ?item ppd:propertyAddress ?ppd_propertyAddress .\n  ?item ppd:hasTransaction ?ppd_hasTransaction .\n  ?item ppd:pricePaid ?ppd_pricePaid .\n  ?item ppd:transactionCategory ?ppd_transactionCategory .\n  ?item ppd:transactionDate ?ppd_transactionDate .\n  ?item ppd:transactionId ?ppd_transactionId\n  \n  OPTIONAL { ?item ppd:estateType ?ppd_estateType }\n  OPTIONAL { ?item ppd:newBuild ?ppd_newBuild }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:county ?ppd_propertyAddressCounty }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:district ?ppd_propertyAddressDistrict }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:locality ?ppd_propertyAddressLocality }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:paon ?ppd_propertyAddressPaon }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:postcode ?ppd_propertyAddressPostcode }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:saon ?ppd_propertyAddressSaon }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:street ?ppd_propertyAddressStreet }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:town ?ppd_propertyAddressTown }\n  OPTIONAL { ?item ppd:propertyType ?ppd_propertyType }\n  OPTIONAL { ?item ppd:recordStatus ?ppd_recordStatus }\n}'\n\ndata_lst <- SPARQL(endpoint, query)\n```\n:::\n\n\nI'll net this down to sales volume by year-month.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_df <- data_lst |>\n  pluck(\"results\") |>\n  as_tibble() |>\n  mutate(\n    date = new_datetime(ppd_transactionDate) |> as_date(),\n    amount = ppd_pricePaid,\n    cat = str_remove(ppd_transactionCategory, \n                     \"<http://landregistry.data.gov.uk/def/ppi/\"),\n  ) |>\n  filter(str_detect(cat, \"standard\")) |>\n  arrange(date) |>\n  mutate(yr_mon = yearmonth(date)) |>\n  count(yr_mon)\n\nnext_month <- data_df |>\n  summarise(last(yr_mon) + 1) |>\n  pull()\n\n# Add two months for predictions\ndata_df2 <- data_df |>\n  rows_insert(tibble(yr_mon = next_month), by = \"yr_mon\") |>\n  rows_insert(tibble(yr_mon = next_month + 1), by = \"yr_mon\")\n```\n:::\n\n\nThere are various sources available for macroeconomic factors that may affect house sales activity. Inflation and interest rates (the latter impacting mortgage rates) could be influential. SW10 has many overseas buyers, so the effective exchange rate versus multiple currencies could be a useful predictor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Measures the price of a selection of goods and services for a typical consumer\ncpi_df <- Quandl(\"RATEINF/CPI_GBR\") |>\n  select(date = Date, cpi_macro = Value) |>\n  arrange(date) |>\n  mutate(yr_mon = yearmonth(date)) |>\n  select(-date)\n\n# YOY rate of change in CPI\ninflation_df <- Quandl(\"RATEINF/INFLATION_GBR\") |>\n  select(date = Date, inflation_macro = Value) |>\n  arrange(date) |>\n  mutate(yr_mon = yearmonth(date)) |>\n  select(-date)\n\n# BOE base rate\ninterest_df <-\n  read_html(\"https://www.bankofengland.co.uk/boeapps/database/Bank-Rate.asp\") |>\n  html_elements(\"#stats-table\") |>\n  html_table() |>\n  pluck(1) |>\n  mutate(date = dmy(`Date Changed`)) |>\n  select(date, interest_macro = Rate) |>\n  arrange(date) |>\n  mutate(yr_mon = yearmonth(date)) |>\n  select(-date) |>\n  slice_tail(n = 1, by = yr_mon)\n\n# Effective exchange rate of a currency when measured against multiple other currencies\nsterling_df <- Quandl(\"BOE/XUDLBK67\") |>\n  select(date = Date, sterling_macro = Value) |>\n  arrange(date) |>\n  mutate(yr_mon = yearmonth(date)) |>\n  slice_tail(n = 1, by = yr_mon) |>\n  select(-date)\n\nmacro_list <-\n  list(\n    inflation_df,\n    cpi_df,\n    interest_df,\n    sterling_df\n  )\n\nmacro_df <- reduce(macro_list, left_join, join_by(yr_mon)) |>\n  arrange(yr_mon) |>\n  fill(ends_with(\"macro\"), .direction = \"down\") |>\n  drop_na()\n\nmacro_df |>\n  pivot_longer(-yr_mon) |>\n  mutate(name = str_remove(name, \"_macro\")) |>\n  ggplot(aes(yr_mon, value)) +\n  geom_line(colour = \"grey70\") +\n  geom_smooth() +\n  facet_wrap(~name, scales = \"free_y\", nrow = 1) +\n  labs(title = \"Macroeconomic Factors\", x = NULL) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/macro economic-1.png){width=100%}\n:::\n:::\n\n\nThe UK government imposes a stamp duty on buyers as a percentage of the sale price, so changes in the rate, particularly the top rate, could be a useful input to the model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstamp_df <- read_html(\"https://www.investmentguide.co.uk/historical-stamp-duty/\") |>\n  html_elements(\"strong , .column-1, .column-2\") |>\n  html_text() |>\n  as_tibble() |>\n  filter(!value %in% c(\"Rate\", \"Charge band\")) |>\n  mutate(type = case_when(\n    str_detect(value, \"%\") ~ \"rate\",\n    str_detect(value, \"Â£\") ~ \"band\",\n    .default = \"date\"\n  )) |>\n  mutate(yr_mon = if_else(type == \"date\", yearmonth(dmy(value)), NA)) |>\n  fill(yr_mon) |>\n  filter(type != \"date\") |>\n  mutate(row = row_number(), .by = c(yr_mon, type)) |>\n  pivot_wider(names_from = type, values_from = value) |>\n  separate_wider_delim(band, \" and under \",\n    names = c(\"from\", \"to\"), too_few = \"align_start\"\n  ) |>\n  mutate(\n    to = if_else(str_starts(from, \"Up to\"), parse_number(from), parse_number(to)),\n    to = replace_na(to, Inf)\n  ) |>\n  select(-from)\n\nstamp_df2 <- stamp_df |>\n  filter(to == Inf) |>\n  select(yr_mon, stamp_macro = rate) |>\n  mutate(stamp_macro = parse_number(stamp_macro))\n\n# saveRDS(stamp_df, \"stamp_df\")\n```\n:::\n\n\nScatter plots suggest all could be helpful inputs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoin_df <- data_df2 |>\n  left_join(macro_df, join_by(yr_mon == yr_mon)) |>\n  left_join(stamp_df2, join_by(closest(yr_mon >= yr_mon))) |>\n  select(-starts_with(\"date\"), -yr_mon.y) |>\n  mutate(across(ends_with(\"_macro\"), lag, 2)) |>\n  drop_na(-n) |>\n  rename(yr_mon = yr_mon.x) |>\n  mutate(month = month(yr_mon))\n\njoin_df |>\n  select(-month) |>\n  correlate() |>\n  focus(n) |>\n  arrange(n)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|term            |          n|\n|:---------------|----------:|\n|cpi_macro       | -0.6441753|\n|stamp_macro     | -0.5998462|\n|inflation_macro | -0.2268071|\n|sterling_macro  |  0.5549617|\n|interest_macro  |  0.5696276|\n\n</div>\n:::\n\n```{.r .cell-code}\njoin_df |>\n  pivot_longer(cols = ends_with(\"_macro\"), names_pattern = \"(.*)_macro\") |>\n  ggplot(aes(value, n)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  facet_wrap(~name, scales = \"free_x\", nrow = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/correlation-1.png){width=100%}\n:::\n:::\n\n\nAs the tidymodels framework evolves we may see further support for quantile regression. In the meantime though, I will use the quantreg R package directly [@quantreg].\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\nrq_fit <- rq(n ~ cpi_macro + sterling_macro + interest_macro + \n               stamp_macro + inflation_macro + month + yr_mon,\n  data = join_df,\n  tau = c(0.05, 0.5, 0.95)\n)\n\n# summary(rq_fit)\n\nGOFTest(rq_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGoodness-of-fit test for quantile regression based on the cusum process \nA large test statistic (small p-value) is evidence of lack of fit \nQuantile 0.05: Test statistic = 8e-04; p-value = 0.56 \nQuantile 0.5: Test statistic = 0.0068; p-value = 0.19 \nQuantile 0.95: Test statistic = 8e-04; p-value = 0.63 \n```\n:::\n\n```{.r .cell-code}\nlm_fit <- rq(n ~ cpi_macro + sterling_macro + interest_macro + \n               stamp_macro + inflation_macro + month + yr_mon,\n  data = join_df\n)\n\nrq_preds <- rq_fit |>\n  predict(join_df,\n    type = \"quantiles\",\n    quantiles = c(0.05, 0.5, 0.95)\n  ) |>\n  as_tibble() |>\n  rename(\n    pred_lower = `tau= 0.05`,\n    pred_median = `tau= 0.50`,\n    pred_upper = `tau= 0.95`\n  ) |>\n  bind_cols(join_df)\n\nlm_preds <- lm_fit |>\n  predict(join_df) |>\n  as_tibble() |>\n  bind_cols(join_df) |>\n  select(yr_mon, lm = value)\n```\n:::\n\n\nThe goodness-of-fit seems reasonable, so let's visualise the quantile and linear regressions along with the actual sales for comparison.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrq_preds |>\n  left_join(lm_preds, join_by(yr_mon == yr_mon)) |>\n  ggplot(aes(yr_mon, pred_median)) +\n  as_reference(geom_ribbon(aes(ymin = pred_lower, ymax = pred_upper), \n                           fill = cols[1]), id = \"ribbon\") +\n  with_blend(\n    annotate(\n      \"rect\",\n      xmin = as_date(\"2022-12-31\"), xmax = as_date(\"2023-02-28\"),\n      ymin = -Inf, ymax = Inf, fill = cols[2], linetype = \"dashed\"\n    ),\n    bg_layer = \"ribbon\", blend_type = \"atop\"\n  ) +\n  geom_line(aes(y = n), colour = \"black\") +\n  geom_line(colour = \"white\", linewidth = 1) +\n  geom_line(aes(y = lm), colour = cols[4], linetype = \"dashed\") +\n  geom_vline(xintercept = as_date(\"2008-09-06\"), \n             linetype = \"dashed\", colour = \"grey30\") +\n  annotate(\"label\",\n    x = yearmonth(\"2008 Sep\"), y = 100,\n    label = \"Lehman\\nBrothers\\nCollapses\", size = 3\n  ) +\n  geom_vline(xintercept = as_date(\"2014-12-03\"), \n             linetype = \"dashed\", colour = \"grey30\") +\n  annotate(\"label\",\n    x = yearmonth(\"2014 Dec\"), y = 100,\n    label = \"Jump in\\nTop-rate\\nStamp\\nDuty\", size = 3\n  ) +\n  geom_vline(xintercept = as_date(\"2016-06-23\"), \n             linetype = \"dashed\", colour = \"grey30\") +\n  annotate(\"label\",\n    x = yearmonth(\"2016 Jun\"), y = 65,\n    label = \"Brexit\\nVote\", size = 3\n  ) +\n  annotate(\"label\",\n    x = yearmonth(\"2020 Jun\"), y = 125,\n    label = glue(\n      \"Actual (Black)\\nLinear (Dashed Orange)\\n\",\n      \"Quantiles (Grey / White)\\nPredicted (Red / White)\"\n    ),\n    size = 3\n  ) +\n  scale_x_yearmonth(date_breaks = \"2 years\") +\n  labs(\n    title = \"Monthly House Sales in London Postcode Area SW10\",\n    subtitle = \"Quantile (0.05, 0.5, 0.95) & Linear Regression\",\n    x = NULL, y = \"Number of Sales\", fill = NULL\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-1.png){width=100%}\n:::\n:::\n\n\nAssuming no further shocks or surprises, then maybe a very gentle recovery in sales volume in the medium term.\n\n## R Toolbox\n\nSummarising below the packages and functions used in this post enables me to separately create a [toolbox visualisation](/project/box) summarising the usage of packages and functions across all posts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nused_here()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"usedthese table table-striped\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Package </th>\n   <th style=\"text-align:left;\"> Function </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Qtools </td>\n   <td style=\"text-align:left;\"> GOFTest[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Quandl </td>\n   <td style=\"text-align:left;\"> Quandl[3] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> SPARQL </td>\n   <td style=\"text-align:left;\"> SPARQL[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> base </td>\n   <td style=\"text-align:left;\"> c[5], library[17], list[1], set.seed[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> conflicted </td>\n   <td style=\"text-align:left;\"> conflict_prefer[1], conflict_prefer_all[1], conflict_scout[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> corrr </td>\n   <td style=\"text-align:left;\"> correlate[1], focus[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> dplyr </td>\n   <td style=\"text-align:left;\"> across[1], arrange[7], bind_cols[2], case_when[1], count[1], filter[4], if_else[2], join_by[4], last[1], left_join[3], mutate[15], pull[1], rename[2], row_number[1], rows_insert[2], select[13], slice_tail[2], summarise[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggfx </td>\n   <td style=\"text-align:left;\"> as_reference[1], with_blend[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggplot2 </td>\n   <td style=\"text-align:left;\"> aes[6], annotate[5], element_text[2], facet_wrap[2], geom_line[4], geom_point[1], geom_ribbon[1], geom_smooth[2], geom_vline[3], ggplot[3], labs[2], theme[2], theme_bw[1], theme_set[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> glue </td>\n   <td style=\"text-align:left;\"> glue[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> lubridate </td>\n   <td style=\"text-align:left;\"> as_date[6], dmy[2], month[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> purrr </td>\n   <td style=\"text-align:left;\"> pluck[2], reduce[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> quantreg </td>\n   <td style=\"text-align:left;\"> rq[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> readr </td>\n   <td style=\"text-align:left;\"> parse_number[3] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> rvest </td>\n   <td style=\"text-align:left;\"> html_elements[2], html_table[1], html_text[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> stats </td>\n   <td style=\"text-align:left;\"> predict[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> stringr </td>\n   <td style=\"text-align:left;\"> str_detect[3], str_remove[2], str_starts[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tibble </td>\n   <td style=\"text-align:left;\"> as_tibble[4], tibble[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidyr </td>\n   <td style=\"text-align:left;\"> drop_na[2], fill[2], pivot_longer[2], pivot_wider[1], replace_na[1], separate_wider_delim[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidyselect </td>\n   <td style=\"text-align:left;\"> ends_with[3], starts_with[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tsibble </td>\n   <td style=\"text-align:left;\"> scale_x_yearmonth[1], yearmonth[10] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> usedthese </td>\n   <td style=\"text-align:left;\"> used_here[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> vctrs </td>\n   <td style=\"text-align:left;\"> new_datetime[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> wesanderson </td>\n   <td style=\"text-align:left;\"> wes_palette[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> xml2 </td>\n   <td style=\"text-align:left;\"> read_html[2] </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}