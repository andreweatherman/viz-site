{
  "hash": "b8adc593710ed07bff72dec79cdf2d87",
  "result": {
    "markdown": "---\ntitle: \"Favourite Things\"\ndate: \"2020-07-26\"\ncategories: [R, web scraping]\ndescription: \"R packages & functions that make doing data science a joy based on usage across projects\"\n---\n\n\n![](feature-1.png){fig-alt=\"Wordcloud emphasising this site's most used R packages and functions\"}\n\nEach [project](/project/) closes with a table summarising the R tools used. By aggregating the package and function usage across all projects, there's an opportunity to:\n\n-   Spot the use of superseded functions like `map_dfr`\n\n-   Identify variable names that conflict with function names, for example, reminding me not to use `date` as a variable name (it's also a base function), but rather use something more explicit and informative like `date_start` or `date_observed`\n\n-   Check for usage consistency, e.g. `clock::date_today` versus `Sys.Date`\n\n-   See where it would be most useful to keep an eye on package version updates\n\nSince starting this in 2017, functions like tidyr's `spread` and `gather` have been superseded by `pivot_wider` and `pivot_longer`. Newer packages have emerged like [tidyclust](https://github.com/EmilHvitfeldt/tidyclust), which brings cluster modelling to tidymodels (now used in [Finding Happiness in 'The Smoke'](https://www.quantumjitter.com/project/happiness/)). [bslib](https://rstudio.github.io/bslib/) has brought improvements to the latest shiny app version embedded in [Plots Thicken](https://www.quantumjitter.com/project/thicken/). The paletteer package has put it's arms around the myriad palette packages out there. And scales' `cut_short_scale` assisted with plot labelling.\n\nMost recently, the latest versions of dplyr and purrr have presented a host of enhancements. For example, the `.by` argument in `mutate` and friends offers a neat alternative to `group_by` and `ungroup` in many situations. Joins have been enhanced (e.g. to support inequality conditions) with the addition of `join_by` to dplyr. And changes in the `map_` family introduce `list_rbind` and associates with `map_dfr`, for example, now superseded.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(rvest)\nlibrary(paletteer)\nlibrary(janitor)\nlibrary(glue)\nlibrary(ggwordcloud)\nlibrary(patchwork)\nlibrary(clock)\nlibrary(usedthese)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n\nn <- 4\npalette <- \"harrypotter::ronweasley2\"\n\ncols <- paletteer_c(palette, n = n)\n\ntibble(x = 1:n, y = 1) |>\n  ggplot(aes(x, y, fill = cols)) +\n  geom_col(colour = \"white\") +\n  geom_label(aes(label = cols |> str_remove(\"FF$\")), \n             size = 4, vjust = 2, fill = \"white\") +\n  annotate(\n    \"label\",\n    x = (n + 1) / 2, y = 0.5,\n    label = palette,\n    fill = \"white\",\n    alpha = 0.8,\n    size = 6\n  ) +\n  scale_fill_manual(values = as.character(cols)) +\n  theme_void() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/theme-1.png){width=100%}\n:::\n:::\n\n\nWe need to web-scrape [all the projects on this web-site](https://www.quantumjitter.com/project/), starting by grabbing the url for each one.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurls <- \"https://www.quantumjitter.com/project/\" |> \n  read_html() |> \n  html_elements(\".quarto-grid-link\") |> \n  html_attr(\"href\") |> \n  as_tibble() |> \n  transmute(str_c(\"https://www.quantumjitter.com/\", value)) |> \n  pull()\n```\n:::\n\n\nThen we can extract their package and function usage tables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_df <- map(urls, \\(x) {\n  x |>\n    read_html() |>\n    html_elements(\".usethese, .usedthese\") |>\n    html_table()\n}) |>\n  list_flatten() |>\n  list_rbind() |>\n  clean_names(replace = c(\"io\" = \"\")) |>\n  select(package, functn) |>\n  drop_na()\n```\n:::\n\n\nSeparation of tidyverse and non-tidyverse packages may be achieved by using the likes of `tidyverse_packages` which lists all packages in the tidyverse.\n\n-   [tidyverse](https://www.tidyverse.org/packages/)\n-   [tidymodels](https://www.tidymodels.org/packages/)\n-   [tidyverts](https://tidyverts.org)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy <-\n  c(\n    tidyverse::tidyverse_packages(),\n    fpp3::fpp3_packages(),\n    tidymodels::tidymodels_packages()\n  ) |>\n  unique()\n\ntidy_df <- table_df |>\n  separate_rows(functn, sep = \";\") |>\n  separate(functn, c(\"functn\", \"count\"), \"\\\\Q[\\\\E\") |>\n  mutate(\n    count = str_remove(count, \"]\") |> as.integer(),\n    functn = str_squish(functn)\n  ) |>\n  count(package, functn, wt = count) |>\n  mutate(multiverse = case_when(\n    package %in% tidy ~ \"tidy\",\n    package %in% c(\"base\", \"graphics\") ~ \"base\",\n    TRUE ~ \"special\"\n  ))\n```\n:::\n\n\nThen we can summarise usage.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npack_df <- tidy_df |>\n  count(package, multiverse, wt = n) |>\n  mutate(name = \"package\")\n\nfun_df <- tidy_df |>\n  count(functn, multiverse, wt = n) |>\n  mutate(name = \"function\")\n\nn_url <- urls |> n_distinct()\n\npackfun_df <- pack_df |>\n  bind_rows(fun_df) |>\n  arrange(desc(n)) |>\n  mutate(\n    packfun = coalesce(package, functn),\n    name = fct_rev(name),\n    .by = name\n  )\n```\n:::\n\n\nUse of Quarto's `{{< include _foobar.qmd >}}` has enabled the lifting, standardisation and simplification of the toolbox code. Previously this code (essentially replicated across the 20 projects) inflated the usage numbers.\n\nWith the latest versions of dplyr and purrr, usage of `group_by`, `ungroup` and `map_dfr` has fallen away whilst usage of `list_rbind` and `join_by` has freshly emerged.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- packfun_df |>\n  filter(name == \"package\") |> \n  ggplot(aes(fct_reorder(packfun, n), n, fill = multiverse)) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  geom_label(aes(label = n), hjust = \"inward\", size = 2, fill = \"white\") +\n  scale_fill_manual(values = cols[c(2, 3, 4)]) +\n  labs(x = NULL, y = NULL, \n       subtitle = glue(\"Package Usage\"))\n\nmin_n <- 5\n\np2 <- packfun_df |>\n  filter(name == \"function\", n >= min_n) |> \n  ggplot(aes(fct_reorder(packfun, n), n, fill = multiverse)) +\n  geom_col() +\n  coord_flip() +\n  geom_label(aes(label = n), hjust = \"inward\", size = 2, fill = \"white\") +\n  scale_fill_manual(values = cols[c(2, 3, 4)]) +\n  labs(x = NULL, y = NULL, \n       subtitle = glue(\"Function Usage >= {min_n}\"))\n\np1 + p2 +\n  plot_annotation(\n    title = glue(\"Favourite Things\"),\n    subtitle = glue(\n      \"Used Across {n_url} Projects as at \",\n      \"{date_format(date_today('Europe/London'), format = '%B %d, %Y')}\"\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-1.png){width=100%}\n:::\n:::\n\n\nThis last code chunk generates the word cloud for use as the feature image for this project.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed = 123\n\npackfun_df |>\n  mutate(angle = 45 * sample(-2:2, n(), \n                             replace = TRUE, \n                             prob = c(1, 1, 4, 1, 1))) |>\n  ggplot(aes(\n    label = packfun,\n    size = n,\n    colour = multiverse,\n    angle = angle\n  )) +\n  geom_text_wordcloud(\n    eccentricity = 1,\n    seed = 789\n  ) +\n  scale_size_area(max_size = 20) +\n  scale_colour_manual(values = cols[c(2, 3, 4)]) +\n  theme_void() +\n  theme(plot.background = element_rect(fill = cols[1]))\n```\n\n::: {.cell-output-display}\n![](feature-1.png){width=100%}\n:::\n:::\n\n\n## R Toolbox\n\nThis project's code too should be included in my \"favourite things\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\nused_here()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"usedthese table table-striped\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Package </th>\n   <th style=\"text-align:left;\"> Function </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> base </td>\n   <td style=\"text-align:left;\"> as.character[1];  as.integer[1];  c[8];  library[10];  sample[1];  unique[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> clock </td>\n   <td style=\"text-align:left;\"> date_format[1];  date_today[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> dplyr </td>\n   <td style=\"text-align:left;\"> arrange[1];  bind_rows[1];  case_when[1];  coalesce[1];  count[3];  desc[1];  filter[2];  mutate[6];  n[1];  n_distinct[1];  pull[1];  select[1];  transmute[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> forcats </td>\n   <td style=\"text-align:left;\"> fct_reorder[2];  fct_rev[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggplot2 </td>\n   <td style=\"text-align:left;\"> aes[7];  annotate[1];  coord_flip[2];  element_rect[1];  geom_col[3];  geom_label[3];  ggplot[4];  labs[2];  scale_colour_manual[1];  scale_fill_manual[3];  scale_size_area[1];  theme[2];  theme_bw[1];  theme_set[1];  theme_void[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ggwordcloud </td>\n   <td style=\"text-align:left;\"> geom_text_wordcloud[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> glue </td>\n   <td style=\"text-align:left;\"> glue[4] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> janitor </td>\n   <td style=\"text-align:left;\"> clean_names[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> paletteer </td>\n   <td style=\"text-align:left;\"> paletteer_c[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> patchwork </td>\n   <td style=\"text-align:left;\"> plot_annotation[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> purrr </td>\n   <td style=\"text-align:left;\"> list_flatten[1];  list_rbind[1];  map[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> rvest </td>\n   <td style=\"text-align:left;\"> html_attr[1];  html_elements[2];  html_table[1];  read_html[2] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> stringr </td>\n   <td style=\"text-align:left;\"> str_c[1];  str_remove[2];  str_squish[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tibble </td>\n   <td style=\"text-align:left;\"> as_tibble[1];  tibble[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidyr </td>\n   <td style=\"text-align:left;\"> drop_na[1];  separate[1];  separate_rows[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> tidyverse </td>\n   <td style=\"text-align:left;\"> tidyverse_packages[1] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> usedthese </td>\n   <td style=\"text-align:left;\"> used_here[1] </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}