{
  "hash": "9dc1441290d5abc9b655649f6e6d2fed",
  "result": {
    "markdown": "---\ntitle: \"Favourite Things\"\ndate: \"2020-07-26\"\ncategories: [R, web scraping]\ndescription: \"R packages & functions that make doing data science a joy based on usage across projects\"\n---\n\n\n![](feature-1.png){fig-alt=\"Wordcloud of this site's most used R packages and functions\"}\n\nEach [project](/project/) closes with a table summarising the R tools used. By visualising the most frequently used packages and functions I can get a sense of where I may most benefit from going deeper into the latest package versions.\n\nEarly on, it was an opportunity to replace superseded functions like `spread` and `gather` with `pivot_wider` and `pivot_longer`. More recently there have been examples of using newer packages such as [tidyclust](https://github.com/EmilHvitfeldt/tidyclust), which brings cluster modelling to tidymodels (used in the latest quarto version of [Finding Happiness in 'The Smoke'](https://www.quantumjitter.com/project/happiness/)), or [bslib](https://rstudio.github.io/bslib/), used in the latest shiny app embedded in [Plots Thicken](https://www.quantumjitter.com/project/thicken/).\n\nAnd in the latest refresh, the newest versions of dplyr and purrr have offered many opportunities for improvements. For example, the `.by` argument in `mutate` and friends as an alternative to `group_by` and `ungroup`. And changes in the `map_` family which introduce `list_rbind` and associates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(rvest)\nlibrary(paletteer)\nlibrary(janitor)\nlibrary(glue)\nlibrary(ggwordcloud)\nlibrary(fpp3)\nlibrary(tidymodels)\nlibrary(patchwork)\nlibrary(clock)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n\nn <- 4\npalette <- \"harrypotter::ronweasley2\"\n\ncols <- paletteer_c(palette, n = n)\n\ntibble(x = 1:n, y = 1) |>\n  ggplot(aes(x, y, fill = cols)) +\n  geom_col(colour = \"white\") +\n  geom_label(aes(label = cols |> str_remove(\"FF$\")), \n             size = 4, vjust = 2, fill = \"white\") +\n  annotate(\n    \"label\",\n    x = (n + 1) / 2, y = 0.5,\n    label = palette,\n    fill = \"white\",\n    alpha = 0.8,\n    size = 6\n  ) +\n  scale_fill_manual(values = as.character(cols)) +\n  theme_void() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/theme-1.png){width=100%}\n:::\n:::\n\n\nI'll start by grabbing the url for all projects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurls <- \"https://www.quantumjitter.com/project/\" |> \n  read_html() |> \n  html_elements(\".quarto-grid-link\") |> \n  html_attr(\"href\") |> \n  as_tibble() |> \n  transmute(str_c(\"https://www.quantumjitter.com/\", value)) |> \n  pull()\n```\n:::\n\n\nThis enables me to extract the package and function usage table for each one.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_df <- map(urls, \\(x) {\n  x |>\n    read_html() |>\n    html_elements(\"#r-toolbox , kable-table\") |>\n    html_table() |> \n    bind_rows()\n}) |>\n  list_rbind() |> \n  clean_names(replace = c(\"io\" = \"\")) |>\n  select(package, functn) |>\n  drop_na()\n```\n:::\n\n\nA little \"spring cleaning\" is needed, and separation of tidyverse and non-tidyverse packages.\n\n-   [tidyverse](https://www.tidyverse.org/packages/)\n-   [tidymodels](https://www.tidymodels.org/packages/)\n-   [tidyverts](https://tidyverts.org)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy <-\n  c(\n    tidyverse_packages(),\n    fpp3_packages(),\n    tidymodels_packages()\n  ) |>\n  unique()\n\ntidy_df <- table_df |>\n  separate_rows(functn, sep = \";\") |>\n  separate(functn, c(\"functn\", \"count\"), \"\\\\Q[\\\\E\") |>\n  mutate(\n    count = str_remove(count, \"]\") |> as.integer(),\n    functn = str_squish(functn)\n  ) |>\n  count(package, functn, wt = count) |>\n  mutate(multiverse = case_when(\n    package %in% tidy ~ \"tidy\",\n    package %in% c(\"base\", \"graphics\") ~ \"base\",\n    TRUE ~ \"special\"\n  ))\n```\n:::\n\n\nThen I can summarise usage and prepare for a faceted plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npack_df <- tidy_df |>\n  count(package, multiverse, wt = n) |>\n  mutate(name = \"package\")\n\nfun_df <- tidy_df |>\n  count(functn, multiverse, wt = n) |>\n  mutate(name = \"function\")\n\nn_url <- urls |> n_distinct()\n\npackfun_df <- pack_df |>\n  bind_rows(fun_df) |>\n  arrange(desc(n)) |>\n  mutate(\n    packfun = coalesce(package, functn),\n    name = fct_rev(name),\n    .by = name\n  )\n```\n:::\n\n\nI've taken advantage of Quarto's `{{< include _foobar.qmd >}}` to lift, standardise and simplify the toolbox code from the end of every project. Previously, this code (broadly repeated 20 times) inflated the function usage numbers.\n\nWith the latest versions of dplyr and purrr, `group_by` has dropped a significant number of places and `list_rbind` has taken a prominent position.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- packfun_df |>\n  filter(name == \"package\") |> \n  ggplot(aes(fct_reorder(packfun, n), n, fill = multiverse)) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  geom_label(aes(label = n), hjust = \"inward\", size = 2, fill = \"white\") +\n  scale_fill_manual(values = cols[c(2, 3, 4)]) +\n  labs(x = NULL, y = NULL)\n\nmin_n <- 7\n\np2 <- packfun_df |>\n  filter(name == \"function\", n >= min_n) |> \n  ggplot(aes(fct_reorder(packfun, n), n, fill = multiverse)) +\n  geom_col() +\n  coord_flip() +\n  geom_label(aes(label = n), hjust = \"inward\", size = 2, fill = \"white\") +\n  scale_fill_manual(values = cols[c(2, 3, 4)]) +\n  labs(x = NULL, y = NULL, \n       subtitle = glue(\"Function Usage >= {min_n}\"))\n\np1 + p2 +\n  plot_annotation(\n    title = glue(\n      \"Favourite Things from {n_url} Projects as at \",\n      \"{date_format(date_today('Europe/London'), format = '%B %d, %Y')}\"\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-1.png){width=100%}\n:::\n:::\n\n\nI'd also like a word cloud generated as the new featured image for this project.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed = 123\n\npackfun_df |>\n  mutate(angle = 45 * sample(-2:2, n(), \n                             replace = TRUE, \n                             prob = c(1, 1, 4, 1, 1))) |>\n  ggplot(aes(\n    label = packfun,\n    size = n,\n    colour = multiverse,\n    angle = angle\n  )) +\n  geom_text_wordcloud(\n    eccentricity = 1,\n    seed = 789\n  ) +\n  scale_size_area(max_size = 20) +\n  scale_colour_manual(values = cols[c(2, 3, 4)]) +\n  theme_void() +\n  theme(plot.background = element_rect(fill = cols[1]))\n```\n\n::: {.cell-output-display}\n![](feature-1.png){width=100%}\n:::\n:::\n\n\n## R Toolbox\n\nA little bit circular, but I might as well include this code too in my \"favourite things\".\n\n---\ntitle: \"Toolbox\"\n---\n\n::: {.cell}\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Package     |Function                                                                                                                                                                                                                                |\n|:-----------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|base        |as.character[1];  as.integer[1];  c[8];  character[1];  integer[1];  library[11];  sample[1];  unique[1]                                                                                                                                |\n|clock       |date_today[1]                                                                                                                                                                                                                           |\n|dplyr       |filter[2];  arrange[1];  bind_rows[2];  case_when[1];  coalesce[1];  count[4];  desc[1];  mutate[6];  n_distinct[1];  pull[1];  select[1];  transmute[1]                                                                                |\n|forcats     |fct_reorder[2];  fct_rev[1]                                                                                                                                                                                                             |\n|fpp3        |fpp3_packages[1]                                                                                                                                                                                                                        |\n|ggplot2     |aes[7];  annotate[1];  coord_flip[2];  element_rect[1];  geom_col[3];  geom_label[3];  ggplot[4];  labs[2];  scale_colour_manual[1];  scale_fill_manual[3];  scale_size_area[1];  theme[2];  theme_bw[1];  theme_set[1];  theme_void[2] |\n|ggwordcloud |geom_text_wordcloud[1];  ggwordcloud[1]                                                                                                                                                                                                 |\n|glue        |glue[3]                                                                                                                                                                                                                                 |\n|janitor     |clean_names[1]                                                                                                                                                                                                                          |\n|paletteer   |paletteer_c[1]                                                                                                                                                                                                                          |\n|patchwork   |plot_annotation[1]                                                                                                                                                                                                                      |\n|purrr       |list_rbind[1];  map[1]                                                                                                                                                                                                                  |\n|rvest       |html_attr[1];  html_elements[2];  html_table[1];  read_html[2]                                                                                                                                                                          |\n|stringr     |str_c[1];  str_remove[2];  str_squish[1]                                                                                                                                                                                                |\n|tibble      |as_tibble[1];  tibble[1]                                                                                                                                                                                                                |\n|tidymodels  |tidymodels_packages[1]                                                                                                                                                                                                                  |\n|tidyr       |drop_na[1];  separate[1];  separate_rows[1]                                                                                                                                                                                             |\n|tidyverse   |tidyverse_packages[1]                                                                                                                                                                                                                   |\n\n</div>\n:::\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}