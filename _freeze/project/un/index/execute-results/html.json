{
  "hash": "ed926bd8527d24bc36a0bf9ade76e1cf",
  "result": {
    "markdown": "---\ntitle: \"East-West Drift\"\ndate: \"2019-01-09\"\ncategories: [R, dimension reduction, animation]\ndescription: \"Animated dimension reduction and East-West historical UN voting patterns\"\nbibliography: references.bib\n---\n\n\n![](feature.gif){fig-alt=\"The enlarged face of a compass with West and East breaking off and repeatedly drifting away and drifting back\"}\n\nIn [Finding Happiness in 'The Smoke'](/project/happiness), dimension reduction and cluster analysis are used to see how different characteristics group London boroughs.\n\nDimension reduction is used here to visualise the grouping of UN members, for example [five of the founding members](https://research.un.org/en/unmembers/founders), based on their [General Assembly](http://www.un.org/en/ga/) voting patterns. And by using animation, it's possible to more easily see changes over time. Are they drifting closer or farther apart?\n\nGeneral Assembly votes are obtained from unvotes[@unvotes] and the visualisation animated using gganimate[@gganimate].\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(tsibble)\nlibrary(gganimate)\nlibrary(clock)\nlibrary(unvotes)\nlibrary(patchwork)\nlibrary(wesanderson)\nlibrary(rvest)\nlibrary(glue)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n\n(cols <- wes_palette(\"GrandBudapest2\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/theme-1.png){width=100%}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_df <- un_votes |> \n  inner_join(un_roll_calls, by = \"rcid\") |> \n  select(vote_date = date, everything()) |> \n  filter(country_code %in% c(\"GB\", \"CN\", \"US\", \"FR\", \"RU\")) |>\n  mutate(\n    country = recode(\n      country_code,\n      GB = \"UK\",\n      CN = \"China\",\n      FR = \"France\",\n      RU = \"Russia\"\n    ),\n    vote_date = date_parse(as.character(vote_date), \n                           format = \"%Y-%m-%d\")\n  )\n\nfrom <- raw_df |>\n  summarise(min(get_year(vote_date))) |>\n  pull()\n\nto <- raw_df |>\n  summarise(max(get_year(vote_date))) |>\n  pull()\n```\n:::\n\n\nApplying a sliding window to the roll-calls from 1946 to 2019 will make it possible to show the temporal changes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_df <- raw_df |>\n  arrange(vote_date, rcid) |>\n  nest(data = -c(vote_date, rcid)) |>\n  mutate(vote_id = row_number(), year = get_year(vote_date)) |>\n  unnest(data) |>\n  complete(country, nesting(vote_id)) |>\n  mutate(vote = replace_na(as.character(vote), \"na\"), value = 1) |>\n  group_by(vote_id) |>\n  fill(year, .direction = \"updown\") |>\n  mutate(variation = n_distinct(vote)) |>\n  ungroup() |>\n  filter(variation != 1) |>\n  select(country, vote_id, year, vote, value)\n\nwdow_df <- tidy_df |>\n  as_tsibble(key = country, index = vote_id) |>\n  nest(data = -vote_id) |>\n  slide_tsibble(.size = 1000, .step = 250, .id = \"slide_id\") |>\n  unnest(data) |>\n  as_tibble() |>\n  arrange(slide_id, vote_id, country)\n```\n:::\n\n\nDimensionality reduction may be performed on each window. And the voting patterns are then visualised as a two-dimensional animation.\n\n\n::: {.cell hash='index_cache/html/pca_e97d2bcf856e68b8865330448d3c8ba2'}\n\n```{.r .cell-code}\nwdows <- wdow_df |>\n  summarise(max(slide_id)) |>\n  pull()\n\nslide_pca <- \\(x) {\n  wide_df <- wdow_df |>\n    filter(slide_id == x) |>\n    pivot_wider(\n      id_cols = c(country, slide_id),\n      names_from = c(vote_id, vote),\n      values_from = value,\n      values_fill = 0\n    )\n\n  pca_fit <- wide_df |>\n    select(-c(country, slide_id)) |>\n    prcomp(scale = TRUE) |>\n    augment(wide_df) |>\n    select(slide_id, country, .fittedPC1, .fittedPC2)\n}\n\npca_windows <- map(1:wdows, slide_pca) |> list_rbind()\n\np <- pca_windows |>\n  mutate(east_west = if_else(country %in% c(\"China\", \"Russia\"), \n                             \"East\", \"West\")) |>\n  ggplot(aes(.fittedPC1, .fittedPC2)) +\n  geom_label(aes(label = country, fill = east_west)) +\n  scale_fill_manual(values = cols[c(1, 3)]) +\n  transition_time(slide_id) +\n  labs(\n    title = glue(\"P5 Distance for the Period {from} to {to}\"),\n    subtitle = \"Frame {frame} of {nframes}\",\n    x = \"Principal Component 1\",\n    y = \"Principal Component 2\",\n    fill = NULL,\n    caption = \"Source: unvotes\"\n  ) +\n  shadow_wake(wake_length = 0.1, wrap = FALSE)\n  \nanimate(p, fps = 5, end_pause = 10)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/pca-1.gif){width=100%}\n:::\n:::\n\n\nFrance and the UK, for example, have remained particularly close given their historical ties and geographical proximity.\n\nThe UN's [Security Council Veto List](http://research.un.org/en/docs/sc/quick/veto) provides further insights on the changing profile of P5 voting over the decades.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://www.un.org/depts/dhl/resguide/scact_veto_table_en.htm\"\n\nmeeting_df <- url |>\n  read_html() |>\n  html_element(\".tablefont\") |>\n  html_table(fill = TRUE) |>\n  select(vote_date = 1, draft = 2, meeting = 3, agenda = 4, vetoed_by = 5) |>\n  slice(-c(1:2))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmeeting_df2 <- meeting_df |>\n  mutate(\n    vote_date = str_remove(vote_date, \"-(?:\\\\d{2}|\\\\d)\"),\n    vote_date = date_parse(vote_date, format = \"%d %B %Y\"),\n    vote_date = if_else(get_year(vote_date) == \"86\", \n                        date_build(1986, 01, 01), vote_date),\n    vetoed_by = str_replace(vetoed_by, \"USSR\", \"Russia\"),\n    Russia = if_else(str_detect(vetoed_by, \"Russia\"), 1, 0),\n    China = if_else(str_detect(vetoed_by, \"China\"), 1, 0),\n    France = if_else(str_detect(vetoed_by, \"France\"), 1, 0),\n    US = if_else(str_detect(vetoed_by, \"US\"), 1, 0),\n    UK = if_else(str_detect(vetoed_by, \"UK\"), 1, 0)\n  ) |>\n  pivot_longer(c(Russia:UK), names_to = \"country\", values_to = \"veto\") |>\n  filter(veto == 1)\n\ncountry_df <- meeting_df2 |>\n  count(country) |>\n  mutate(country = fct_reorder(country, n))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncols2 <- wes_palette(5, name = \"GrandBudapest2\", type = \"continuous\")\n\nlittle_plot <- country_df |>\n  ggplot(aes(country, n, fill = country)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(values = cols2[c(1:5)]) +\n  geom_label(aes(label = n), colour = \"white\", hjust = \"inward\") +\n  labs(\n    x = NULL, y = NULL, fill = NULL, title = \"Most Vetoes\",\n    caption = \"Source: research.un.org\"\n  )\n\nyear_df <- meeting_df2 |>\n  mutate(year = get_year(vote_date)) |>\n  count(year, country)\n\nto_date <- format(max(meeting_df2$vote_date), \"%b %d, %y\")\n\nbig_plot <- year_df |>\n  ggplot(aes(year, n, fill = country)) +\n  geom_col(show.legend = FALSE) +\n  scale_fill_manual(values = cols2[c(1:5)]) +\n  scale_x_continuous(breaks = (seq(1945, 2020, 5))) +\n  labs(\n    x = NULL, y = \"Veto Count\", fill = NULL,\n    title = glue(\"Security Council Vetoes to {to_date}\")\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nlayout <- \"AAB\"\nbig_plot + little_plot + plot_layout(design = layout)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-1.png){width=100%}\n:::\n:::\n\n\n## R Toolbox\n\nSummarising below the packages and functions used in this post enables me to separately create a [toolbox visualisation](/project/box) summarising the usage of packages and functions across all posts.\n\n---\ntitle: \"Toolbox\"\n---\n\n::: {.cell}\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Package     |Function                                                                                                                                                                                                 |\n|:-----------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|base        |as.character[2];  c[11];  character[2];  format[1];  library[10];  max[3];  min[1];  seq[1]                                                                                                              |\n|clock       |date_build[1];  date_parse[2];  get_year[5]                                                                                                                                                              |\n|dplyr       |filter[4];  arrange[2];  count[2];  group_by[1];  if_else[7];  inner_join[1];  mutate[8];  n[2];  n_distinct[1];  pull[3];  recode[1];  row_number[1];  select[5];  slice[1];  summarise[3];  ungroup[1] |\n|forcats     |fct_reorder[1]                                                                                                                                                                                           |\n|gganimate   |animate[1];  gganimate[1];  shadow_wake[1];  transition_time[1]                                                                                                                                          |\n|ggplot2     |aes[5];  coord_flip[1];  element_text[1];  geom_col[2];  geom_label[2];  ggplot[3];  labs[3];  scale_fill_manual[3];  scale_x_continuous[1];  theme[1];  theme_bw[1];  theme_set[1]                      |\n|glue        |glue[3]                                                                                                                                                                                                  |\n|patchwork   |plot_layout[1]                                                                                                                                                                                           |\n|purrr       |list_rbind[1];  map[1]                                                                                                                                                                                   |\n|rvest       |html_element[1];  html_table[1];  read_html[1]                                                                                                                                                           |\n|stats       |prcomp[1]                                                                                                                                                                                                |\n|stringr     |str_detect[5];  str_remove[1];  str_replace[1]                                                                                                                                                           |\n|tibble      |as_tibble[1]                                                                                                                                                                                             |\n|tidyr       |complete[1];  fill[1];  nest[2];  nesting[1];  pivot_longer[1];  pivot_wider[1];  replace_na[1];  unnest[2]                                                                                              |\n|tsibble     |as_tsibble[1];  slide_tsibble[1];  tsibble[1]                                                                                                                                                            |\n|utils       |data[2]                                                                                                                                                                                                  |\n|wesanderson |wes_palette[2]                                                                                                                                                                                           |\n\n</div>\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}