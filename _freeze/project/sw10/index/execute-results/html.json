{
  "hash": "e054ff48ef276b5a8a7a3fe07ffeadb7",
  "result": {
    "markdown": "---\ntitle: \"House Sales\"\ndate: \"2017-12-17\"\ncategories: [R, time series]\ndescription: \"A series of events, such as the Financial Crisis and the 2016 Brexit vote, that damped down residential property sales in London\"\nimage: \"feature.jpg\"\nbibliography: references.bib\n---\n\n\n![](feature.jpg)\n\nVarious events have impacted house sales in London. There has been a series of increases in [stamp duty](https://www.gov.uk/stamp-duty-land-tax) and the impact of the financial crisis. More recently Brexit and the consequences of Covid-19.\n\nHow is London postal area SW10 coping with all this?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(scales, exclude = \"date_format\")\nlibrary(SPARQL)\nlibrary(clock)\nlibrary(wesanderson)\nlibrary(glue)\nlibrary(vctrs)\nlibrary(tsibble)\nlibrary(patchwork)\nlibrary(ggmosaic)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\n\n(cols <- wes_palette(name = \"Darjeeling1\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/theme-1.png){width=100%}\n:::\n:::\n\n\nHouse prices paid data are provided by [HM Land Registry Open Data](http://landregistry.data.gov.uk/app/qonsole#).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nendpoint <- \"https://landregistry.data.gov.uk/landregistry/query\"\n\nquery <- 'PREFIX  text: <http://jena.apache.org/text#>\nPREFIX  ppd:  <http://landregistry.data.gov.uk/def/ppi/>\nPREFIX  lrcommon: <http://landregistry.data.gov.uk/def/common/>\n  \nSELECT  ?item ?ppd_propertyAddress ?ppd_hasTransaction ?ppd_pricePaid ?ppd_transactionCategory ?ppd_transactionDate ?ppd_transactionId ?ppd_estateType ?ppd_newBuild ?ppd_propertyAddressCounty ?ppd_propertyAddressDistrict ?ppd_propertyAddressLocality ?ppd_propertyAddressPaon ?ppd_propertyAddressPostcode ?ppd_propertyAddressSaon ?ppd_propertyAddressStreet ?ppd_propertyAddressTown ?ppd_propertyType ?ppd_recordStatus\n\nWHERE\n{ ?ppd_propertyAddress text:query _:b0 .\n  _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> lrcommon:postcode .\n  _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> _:b1 .\n  _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> \"( SW10 )\" .\n  _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> _:b2 .\n  _:b2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#first> 3000000 .\n  _:b2 <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest> <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil> .\n  ?item ppd:propertyAddress ?ppd_propertyAddress .\n  ?item ppd:hasTransaction ?ppd_hasTransaction .\n  ?item ppd:pricePaid ?ppd_pricePaid .\n  ?item ppd:transactionCategory ?ppd_transactionCategory .\n  ?item ppd:transactionDate ?ppd_transactionDate .\n  ?item ppd:transactionId ?ppd_transactionId\n  \n  OPTIONAL { ?item ppd:estateType ?ppd_estateType }\n  OPTIONAL { ?item ppd:newBuild ?ppd_newBuild }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:county ?ppd_propertyAddressCounty }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:district ?ppd_propertyAddressDistrict }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:locality ?ppd_propertyAddressLocality }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:paon ?ppd_propertyAddressPaon }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:postcode ?ppd_propertyAddressPostcode }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:saon ?ppd_propertyAddressSaon }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:street ?ppd_propertyAddressStreet }\n  OPTIONAL { ?ppd_propertyAddress lrcommon:town ?ppd_propertyAddressTown }\n  OPTIONAL { ?item ppd:propertyType ?ppd_propertyType }\n  OPTIONAL { ?item ppd:recordStatus ?ppd_recordStatus }\n}'\n\ndata_list <- SPARQL(endpoint, query)\n```\n:::\n\n\nThe focus is on the [standard price paid](https://www.gov.uk/guidance/about-the-price-paid-data#explanations-of-column-headers-in-the-ppd).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_tidy <- data_list$results |>\n  as_tibble() |>\n  mutate(\n    date = new_datetime(ppd_transactionDate) |> as_date(),\n    amount = ppd_pricePaid,\n    prop_type = str_extract(ppd_propertyType, \"(?<=common/)[\\\\w]+\"),\n    est_type = str_extract(ppd_estateType, \"(?<=common/)[\\\\w]+\"),\n    cat = str_remove(ppd_transactionCategory, \"<http://landregistry.data.gov.uk/def/ppi/\"),\n    prop_type = recode(prop_type, otherPropertyType = \"Other\")\n  ) |>\n  filter(str_detect(cat, \"standard\"))\n```\n:::\n\n\nA Telegraph article entitled [Timeline: 20 years of stamp duty increases for home buyers](https://www.telegraph.co.uk/property/buy/timeline-20-years-of-stamp-duty-increases-for-home-buyers/) pinpoints many of the key event dates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nevents <- tribble(\n  ~date, ~change,\n  \"96-07-31\", \"Stamp Duty £250k (1.5%) £500k (2%)\",\n  \"98-03-31\", \"£250k (2%) £500k (3%)\",\n  \"99-03-31\", \"£250k (2.5%) £500k (3.5%)\",\n  \"00-03-31\", \"£250k (3%) £500k (4%)\",\n  \"11-04-30\", \"£250k (3%) £500k (4%) £1m (5%)\",\n  \"12-03-31\", \"£250k (3%) £500k (4%) £1m (5%) £2m (7%)\",\n  \"14-12-31\", \"£250k (5%) £925k (10%) 1.5m (12%)\",\n  \"07-08-09\", \"Financial Crisis\",\n  \"16-06-23\", \"Brexit Vote\",\n  \"20-03-23\", \"Covid-19 Lockdown\"\n) |>\n  mutate(date = date_parse(date, format = \"%y-%m-%d\"))\n\nevents |> \n  rename(\"Date\" = date, \"Event\" = change)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Date       |Event                                   |\n|:----------|:---------------------------------------|\n|1996-07-31 |Stamp Duty £250k (1.5%) £500k (2%)      |\n|1998-03-31 |£250k (2%) £500k (3%)                   |\n|1999-03-31 |£250k (2.5%) £500k (3.5%)               |\n|2000-03-31 |£250k (3%) £500k (4%)                   |\n|2011-04-30 |£250k (3%) £500k (4%) £1m (5%)          |\n|2012-03-31 |£250k (3%) £500k (4%) £1m (5%) £2m (7%) |\n|2014-12-31 |£250k (5%) £925k (10%) 1.5m (12%)       |\n|2007-08-09 |Financial Crisis                        |\n|2016-06-23 |Brexit Vote                             |\n|2020-03-23 |Covid-19 Lockdown                       |\n\n</div>\n:::\n:::\n\n\nVisually, it appears that the financial crisis had a big impact on sales volume, with the Brexit vote sucking much of the remaining oxygen out of the market. Stamp duty increases in between probably slowed any intermediate recovery.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nto_date <- data_tidy |> \n  summarise(max(date)) |> \n  pull() |> \n  date_format(format = \"%b %d, %Y\")\n\ndata_tidy |>\n  ggplot(aes(date, amount, colour = est_type)) +\n  geom_point(alpha = 0.2, size = 0.7, show.legend = FALSE) +\n  geom_smooth(se = FALSE, aes(linetype = est_type), size = 1.2) +\n  labs(\n    title = \"SW10 Standard House Prices\",\n    subtitle = glue(\"Prices Paid to {to_date} (Prices > £5m Not Shown)\"\n    ),\n    x = NULL,\n    y = NULL,\n    colour = \"Type\", linetype = \"Type\",\n    caption = \"Source: HM Land Registry\"\n  ) +\n  geom_vline(xintercept = events$date, size = 0.5, lty = 2, alpha = 0.4) +\n  annotate(\"text\", events$date, 5000000,\n    angle = 90,\n    label = events$change, vjust = 1.4, hjust = 1, size = 3, fontface = 2\n  ) +\n  coord_cartesian(ylim = c(0, 5000000)) +\n  scale_colour_manual(values = cols[c(2, 3)]) +\n  scale_x_date(date_breaks = \"2 years\", date_labels = \"%Y\") +\n  scale_y_continuous(labels = label_dollar(accuracy = 0.1, prefix = \"£\", \n                                           scale_cut = cut_short_scale()))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/trend-1.png){width=100%}\n:::\n:::\n\n\nAn alternative way of looking at this is by median quarterly prices (with upper and lower quartiles), supplemented by sales volumes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqtr_start <- date_today(\"Europe/London\") |> \n  lubridate::floor_date(\"quarter\")\n\ndata_qtile <- \n  data_tidy |> \n  filter(date < qtr_start) |> \n  mutate(yr_qtr = yearquarter(date)) |> \n  group_by(yr_qtr) |> \n  summarise(price = quantile(amount, c(0.25, 0.5, 0.75)), \n            quantile = c(\"lower\", \"median\", \"upper\") |> factor(),\n            n = n()) |> \n  ungroup() |> \n  pivot_wider(names_from = quantile, values_from = price)\n\nlast <- data_qtile |> summarise(max(yr_qtr)) |> pull()\nfirst <- data_qtile |> summarise(min(yr_qtr)) |> pull()\n\np1 <- data_qtile |> \n  ggplot(aes(yr_qtr, median)) +\n  geom_ribbon(aes(ymin = lower, ymax = upper), fill = cols[5]) +\n  geom_line(colour = \"white\") +\n  geom_hline(yintercept = 1000000, linetype = \"dashed\") +\n  annotate(\"text\", x = 17700, y = 300000, \n           label = \"Covid-19\\nLockdown\", size = 3) +\n  scale_x_yearquarter(date_breaks = \"2 years\") +\n  scale_y_log10(labels = label_dollar(prefix = \"£\", \n                                      scale_cut = cut_short_scale())) +\n  labs(\n    title = glue(\"Median Quarterly SW10 Property Prices ({first} to {last})\"), \n    subtitle = \"With Upper / Lower Price Quartiles & Sales Volume\",\n    x = NULL, y = \"Price (Log10 Scale)\"\n    ) +\n  theme(axis.text.x = element_blank())\n\np2 <- data_qtile |> \n  ggplot(aes(yr_qtr, n)) +\n  geom_line() +\n  annotate(\"text\", x = 14100, y = 180, label = \"Financial\\nCrisis\", size = 3) +\n  annotate(\"text\", x = 17100, y = 130, label = \"Brexit\\nVote\", size = 3) +\n  scale_x_yearquarter(date_breaks = \"2 years\") +\n  labs(x = NULL, y = \"Transactions\",\n       caption = \"Source: HM Land Registry\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\np1 / p2 + plot_layout(heights = c(2, 1))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/median-1.png){width=100%}\n:::\n:::\n\n\nA ggmosaic [@ggmosaic] visualisation of the composition of SW10 reveals the postal area to be overwhelmingly dominated by leasehold flats.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrans <- data_tidy |> nrow()\n\ndata_tidy |> \n  ggplot() +\n  geom_mosaic(aes(product(prop_type, est_type), fill = prop_type), \n              offset = 0.02, divider = mosaic(\"h\")) +\n  scale_fill_manual(values = cols[c(2:5)]) + \n  labs(\n    title = \"SW10 Transactions by Estate & Property Types\",\n    subtitle = glue(\"{comma(trans)} Transactions to {to_date}\"),\n    x = \"\", y = \"\", fill = \"Property Type\", \n    caption = \"Source: HM Land Registry\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/composition-1.png){width=100%}\n:::\n:::\n\n\nOther blog posts on [quantum jitter](/.) look at SW10 property from diffferent perspectives: [Digging Deep](/project/planning) considers the correlation between house sales and planning applications; and [Bootstraps & Bandings](/project/bands) uses a sample of recent house sales to infer whether property bands are as representative of property values today as they were three decades ago.\n\n## R Toolbox\n\nSummarising below the packages and functions used in this post enables me to separately create a [toolbox visualisation](/project/box) summarising the usage of packages and functions across all posts.\n\n\n::: {.cell}\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Package     |Function                                                                                                                                                                                                                                                                                                                                                                                 |\n|:-----------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|base        |c[4];  conflicts[1];  cumsum[1];  factor[1];  function[1];  max[2];  min[1];  nrow[1];  search[1];  sum[1]                                                                                                                                                                                                                                                                               |\n|clock       |as_date[1];  date_format[1];  date_parse[1];  date_today[1]                                                                                                                                                                                                                                                                                                                              |\n|dplyr       |filter[7];  arrange[2];  desc[2];  group_by[2];  if_else[3];  mutate[7];  n[2];  pull[3];  recode[1];  rename[1];  summarise[5];  ungroup[1]                                                                                                                                                                                                                                             |\n|ggmosaic    |geom_mosaic[1];  mosaic[1];  product[1]                                                                                                                                                                                                                                                                                                                                                  |\n|ggplot2     |aes[6];  annotate[4];  coord_cartesian[1];  element_blank[1];  element_text[1];  geom_hline[1];  geom_line[2];  geom_point[1];  geom_ribbon[1];  geom_smooth[1];  geom_vline[1];  ggplot[4];  labs[4];  Scale[1];  scale_colour_manual[1];  scale_fill_manual[1];  scale_x_date[1];  scale_y_continuous[1];  scale_y_log10[1];  theme[2];  theme_bw[1];  theme_minimal[1];  theme_set[1] |\n|glue        |glue[3]                                                                                                                                                                                                                                                                                                                                                                                  |\n|patchwork   |plot_layout[1]                                                                                                                                                                                                                                                                                                                                                                           |\n|purrr       |map[1];  map2_dfr[1];  possibly[1];  set_names[1]                                                                                                                                                                                                                                                                                                                                        |\n|readr       |read_lines[1]                                                                                                                                                                                                                                                                                                                                                                            |\n|scales      |comma[1];  cut_short_scale[2];  label_dollar[2]                                                                                                                                                                                                                                                                                                                                          |\n|SPARQL      |SPARQL[1]                                                                                                                                                                                                                                                                                                                                                                                |\n|stats       |median[1];  quantile[1]                                                                                                                                                                                                                                                                                                                                                                  |\n|stringr     |str_c[5];  str_count[1];  str_detect[3];  str_extract[2];  str_remove[3];  str_remove_all[1];  str_starts[1]                                                                                                                                                                                                                                                                             |\n|tibble      |as_tibble[2];  tibble[2];  tribble[2];  enframe[1]                                                                                                                                                                                                                                                                                                                                       |\n|tidyr       |pivot_wider[1];  unnest[1]                                                                                                                                                                                                                                                                                                                                                               |\n|tsibble     |scale_x_yearquarter[2];  yearquarter[1]                                                                                                                                                                                                                                                                                                                                                  |\n|vctrs       |new_datetime[1]                                                                                                                                                                                                                                                                                                                                                                          |\n|wesanderson |wes_palette[1]                                                                                                                                                                                                                                                                                                                                                                           |\n\n</div>\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}