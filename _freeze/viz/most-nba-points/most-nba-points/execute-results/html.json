{
  "hash": "927e856d0063e016f92e902af0cdb77e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"NBA Points by Blue Bloods\"\nauthor: \"Andrew Weatherman\"\ndate: \"2024-05-19\"\ncategories: [ggplot, college basketball, scraping]\ndescription: \"Stacked bar charts with `ggplot`\"\n---\n\n\n# Plot\n\nIn early February 2024, Todd Whitehead tweeted a visualization that illustrated points scored in the NBA by former Duke and North Carolina players.\n\n\n{{< tweet CrumpledJumper 1753900914824659035 >}}\n\n\n\nThis code, not yet accompanied by a tutorial, works to recreate that visualization using `ggplot2` and data from Sports Reference for Duke, North Carolina, Kentucky, Kansas, and UCLA players (the primary \"Blue Bloods\" of college basketball).\n\n<details>\n\n<summary>What we will be creating</summary>\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](plot.png){width=100%}\n:::\n:::\n\n\n</details>\n\n# Full source code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\nlibrary(tidyverse)\nlibrary(cbbplotR)\nlibrary(cbbdata)\nlibrary(showtext)\n\n## add oswald font from google fonts\nfont_add_google(\"Oswald\", \"oswald\")\nshowtext_auto()\n\n## create a function for scraping career points scored by players from certain\n## colleges\nget_players <- function(team, slug) {\n  \n  ## grab color of team for bar fill\n  color <- filter(cbd_teams(), common_team == team)$color\n\n  read_html(paste0(\"https://www.basketball-reference.com/friv/colleges.fcgi?college=\", slug)) %>%\n    html_nodes(\"#nba_aba_players\") %>%\n    html_table() %>%\n    pluck(1) %>%\n    janitor::row_to_names(1) %>%\n    janitor::clean_names() %>%\n    select(player, pts) %>%\n    mutate(pts = as.numeric(pts)) %>%\n    filter(!is.na(pts)) %>%\n    arrange(desc(pts)) %>%\n    mutate(\n      player = trimws(gsub(\"\\\\*\", \"\", player)), ## remove * from some names\n      player = factor(player, levels = player), ## set an ordering factor for the bars\n      team = team,\n      fill = color,\n      ## only include names of first 15 players, truncate them to 15 chars.\n      label = ifelse(row_number() <= 15, str_trunc(as.character(player), 15), \"\")\n    )\n}\n\n## loop over schools\nplotting_data <- map2_dfr(\n  .x = c(\"Duke\", \"North Carolina\", \"Kansas\", \"Kentucky\", \"UCLA\"),\n  .y = c(\"duke\", \"unc\", \"kansas\", \"kentucky\", \"ucla\"),\n  \\(team, slug) get_players(team, slug)\n)\n\np <- plotting_data %>%\n  ## min. 1000 points scored\n  filter(pts >= 1000) %>%\n  ## order teams by total points scored\n  ggplot(aes(x = fct_reorder(team, -pts, sum), y = pts, fill = fill)) +\n  ## stack bars and decrease line width\n  geom_bar(position = \"stack\", stat = \"identity\", color = \"#F6F7F2\", linewidth = 0.25) +\n  ## label for players\n  geom_text(aes(label = toupper(label), size = pts),\n    position = position_stack(vjust = 0.5),\n    color = \"white\", family = \"oswald\"\n  ) +\n  ## calc. total points scored and include label (nudge label up)\n  geom_text(\n    data = ~ summarize(.x, total = sum(pts), .by = team),\n    aes(label = scales::label_comma()(total), x = team, y = total),\n    size = 8, fontface = \"bold\", inherit.aes = FALSE,\n    family = \"oswald\", nudge_y = 9000\n  ) +\n  ## line above logos\n  geom_hline(yintercept = 0, linewidth = 0.5) +\n  scale_size(range = c(2, 7)) +\n  scale_fill_identity() +\n  ## decrease space b/w logos and plot // set limit to above the highest\n  ## total points scored\n  scale_y_continuous(expand = c(0.01, 0), limits = c(0, 450000)) +\n  theme_void() +\n  theme(\n    axis.text.x = element_cbb_teams(size = 1),\n    legend.position = \"none\",\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.title = element_text(\n      hjust = 0.5, vjust = 3, face = \"bold\", size = 36,\n      family = \"oswald\"\n    ),\n    plot.subtitle = element_text(\n      hjust = 0.5, vjust = 8, size = 20,\n      family = \"oswald\"\n    ),\n    plot.caption = element_text(\n      hjust = 0.5, family = \"oswald\",\n      size = 18\n    ),\n    ## set margins\n    plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), \"cm\"),\n    ## make background off-white\n    plot.background = element_rect(fill = \"#F6F7F2\")\n  ) +\n  labs(\n    title = \"Total points scored in the NBA by Blue Blood alumni\",\n    subtitle = \"In all career games from players in the NBA or ABA (min. 1,000 pts. scored)\",\n    caption = \"Data by Sports Reference || Viz. by @andreweatherman\"\n  )\n\n## save\nggsave(plot = p, \"viz/most-nba-points/plot.png\", w = 4, h = 6)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}