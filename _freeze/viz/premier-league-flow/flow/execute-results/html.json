{
  "hash": "ebf28fe7fa46d32658cb77ddf4dacdee",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Premier League Standings Flow Chart\"\nauthor: \"Andrew Weatherman\"\ndate: \"2024-05-19\"\ncategories: [ggplot, soccer]\ndescription: \"Bump charts with `ggbump`\"\n---\n\n\n# Plot\n\nThis plot attempts to visualize the \"standings flow\" in the English Premier League during the 2023-24 campaign, with a focus on champions Manchester City and runners-up Arsenal.\n\n<details>\n\n<summary>What we will be creating</summary>\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](premier_league_flow.png){width=100%}\n:::\n:::\n\n\n</details>\n\n# Full source code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(worldfootballR)\nlibrary(ggbump)\nlibrary(ggtext)\nlibrary(showtext)\n\n## add Cairo font from google fonts\nfont_add_google(\"Cairo\", \"cairo\")\nshowtext_auto()\n\n## get the data from worldfootball R\n## use purrr and weeks 1:38 to loop over all standings and weeks\ndata <- map_dfr(1:38, \\(week) tm_matchday_table(\"England\", start_year = \"2023\", matchday = week))\n\np <- data %>% \n  select(team = squad, week = matchday, place = rk) %>% \n  ## add fill colors and alpha levels based on whether teams are man city/arsenal or not\n  mutate(\n    fill_color = case_when(\n      team == 'Man City' ~ '#6CABDD',\n      team == 'Arsenal' ~ '#EF0107',\n      .default = 'grey50'\n  ),\n    alpha = ifelse(team %in% c('Man City', 'Arsenal'), 1, 0.5)\n  ) %>% \n  ggplot(aes(week, place, color = fill_color, group = team)) +\n  geom_point(size = 1.7, aes(alpha = alpha)) +\n  ## geom_bump from ggbump\n  geom_bump(aes(alpha = alpha), linewidth = 0.7) +\n  scale_color_identity() +\n  ## customize our weeks lables\n  scale_x_continuous(breaks = c(1, seq(10, 30, 10), 38),\n                     labels = c(\"1st week\", \"10th\", \"20th\", \"30th\", 'Final week')) +\n  ## reverse the y-axis so 1st is plotted at the top and customize the labels\n  scale_y_reverse(breaks = seq(1, 20, 1), labels = c(\"1st\", seq(2, 19, 1), 'Last')) +\n  theme_void() +\n  theme(legend.position = 'none', # remove legend\n        plot.title.position = 'plot',\n        ## add the cairo font and change some sizes for saving\n        plot.title = element_text(family = 'cairo', hjust = 0.5, size = 46, face = 'bold', vjust = 0),\n        plot.subtitle = element_markdown(family = 'cairo', hjust = 0.5, size = 24),\n        plot.caption.position = 'plot',\n        plot.caption = element_text(family = 'cairo', hjust = 0.5, vjust = -2, size = 18),\n        axis.text = element_text(family = 'cairo', size = 20),\n        axis.text.x = element_text(vjust = -1),\n        ## add light dotted major gridlines for viewing\n        panel.grid.major.x = element_line(color = 'grey70', linetype = 'dotted'),\n        panel.grid.major.y = element_line(color = 'grey70', linetype = 'dotted'),\n        ## set margins\n        plot.margin = unit(c(0.25, 0.5, 0.5, 0.5), \"cm\"),\n        ## make background off-white\n        plot.background = element_rect(fill = \"#F6F7F2\")) +\n  labs(title = '2023-24 English Premier League Table Flow',\n       ## with ggtext, we can use minor HTML to change color and weight of our subtitle\n       subtitle = \"<p>The fight between <span style='color:#6CABDD;'><b>Manchester City</b></span> and <span style='color:#EF0107;'><b>Arsenal</b></span> throughout the 2023-24 campaign</p>\",\n       caption = \"Data by worldfootballR || Viz. by @andreweatherman\")\n\n## save\nggsave(plot = p, w = 6.16, h = 4.81, \"premier_league_flow.png\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}